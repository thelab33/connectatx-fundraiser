from app import db
from datetime import datetime

class Sponsor(db.Model):
    __tablename__ = "sponsors"

    id         = db.Column(db.Integer, primary_key=True)
    name       = db.Column(db.String(100), nullable=False)
    email      = db.Column(db.String(120), nullable=True)
    amount     = db.Column(db.Integer, default=0)            # Stored in cents
    status     = db.Column(db.String(32), default="pending") # pending, approved, rejected, refunded, etc.
    deleted    = db.Column(db.Boolean, default=False)
    message    = db.Column(db.String(255), nullable=True)    # Optional supporter message
    created_at = db.Column(db.DateTime, default=datetime.utcnow)
    updated_at = db.Column(db.DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)

    # --- Relationships --- #
    transactions = db.relationship("Transaction", backref="sponsor", lazy=True)

    # --- Properties --- #
    @property
    def display_amount(self):
        """Return amount in dollars (for templates)."""
        return self.amount / 100.0

    def as_dict(self):
        """API serialization."""
        return {
            "id": self.id,
            "name": self.name,
            "email": self.email,
            "amount_cents": self.amount,
            "amount": self.display_amount,
            "status": self.status,
            "deleted": self.deleted,
            "message": self.message,
            "created_at": self.created_at.isoformat(),
            "updated_at": self.updated_at.isoformat(),
        }
