{
  "//": "üí° FUNDCHAMPS SaaS ‚Äî Elite NPM Scripts: lint, audit, build, watch, deploy, a11y",
  "prepare": "husky install || true",
  "postinstall": "npm run update:browsers || true && npm run audit:deps || true",
  "// css pipeline": "",
  "css:build": "tailwindcss -c tailwind.config.cjs -i app/static/css/input.css -o app/static/css/tailwind.min.css --minify",
  "css:dev": "tailwindcss -c tailwind.config.cjs -i app/static/css/input.css -o app/static/css/tailwind.min.css -w",
  "css:verify": "node -e \"const fs=require('fs');const p='app/static/css/tailwind.min.css';if(!fs.existsSync(p)){console.error('‚ùå Missing',p);process.exit(1)};const s=fs.statSync(p).size;console.log('‚úÖ CSS ok:',p,Math.round(s/1024)+'KB')\"",
  "// js pipeline": "",
  "build:js": "esbuild app/static/js/main.js --bundle --format=esm --minify --sourcemap --outfile=app/static/js/main.js --allow-overwrite",
  "watch:js": "esbuild app/static/js/main.js --bundle --format=esm --sourcemap --outfile=app/static/js/main.js --watch --allow-overwrite",
  "// dev / serve": "",
  "dev": "npm-run-all --parallel css:dev watch:js",
  "serve:flask": "FLASK_APP=app:create_app FLASK_ENV=development flask run --reload",
  "serve:flask:win": "cross-env FLASK_APP=app:create_app FLASK_ENV=development flask run --reload",
  "dev:app": "npm-run-all --parallel css:dev watch:js serve:flask",
  "// builds": "",
  "prebuild": "npm run clean:dist",
  "build": "npm run lint && npm run format && npm run css:build && npm run build:js && npm run css:verify",
  "build:fast": "npm run css:build && npm run build:js && npm run css:verify",
  "// linting": "",
  "lint:css": "stylelint 'app/static/css/input.css' 'app/static/css/src/**/*.css' 'app/static/css/luxury.css' --fix --config stylelint.config.cjs --ignore-path .stylelintignore",
  "lint:css:check": "stylelint 'app/static/css/input.css' 'app/static/css/src/**/*.css' 'app/static/css/luxury.css' --config stylelint.config.cjs --ignore-path .stylelintignore",
  "lint:js": "eslint 'app/static/js/**/*.js' --fix",
  "lint:js:check": "eslint 'app/static/js/**/*.js'",
  "lint:html": "htmlhint --config .htmlhintrc 'app/templates/**/*.html' || true",
  "lint:md": "markdownlint README.md \"docs/**/*.md\" \"app/**/*.md\" --ignore-path .markdownlintignore",
  "lint": "npm run lint:css && npm run lint:js && npm run lint:html && npm run lint:md",
  "// formatting": "",
  "format": "prettier --write \"**/*.{js,css,html,jinja,jinja2,py,json,md}\"",
  "format:check": "prettier --check \"**/*.{js,css,html,jinja,jinja2,py,json,md}\"",
  "// audits": "",
  "audit:deps": "npm outdated || echo '‚úÖ All dependencies up to date!'",
  "audit:css": "stylelint 'app/static/css/input.css' 'app/static/css/src/**/*.css' 'app/static/css/luxury.css' --config stylelint.config.cjs --ignore-path .stylelintignore || true",
  "audit:js": "eslint 'app/static/js/**/*.js' || true",
  "audit:html": "htmlhint --config .htmlhintrc 'app/templates/**/*.html' || true",
  "audit:md": "markdownlint README.md \"docs/**/*.md\" \"app/**/*.md\" --ignore-path .markdownlintignore || true",
  "audit:bundle": "source-map-explorer app/static/js/main.js || true",
  "audit:full": "npm run lint && npm run format:check && npm run audit:css && npm run audit:js && npm run audit:html && npm run audit:md && npm run audit:deps",
  "// maintenance": "",
  "clean:dist": "rm -rf .cache dist *.log app/static/css/*.map app/static/js/*.map",
  "clean:hard": "rm -rf node_modules .cache dist *.log app/static/css/tailwind.min.css app/static/css/globals.css app/static/css/*.map app/static/js/*.map",
  "update:browsers": "npx update-browserslist-db@latest",
  "// svg optimization (optional)": "",
  "svgo:all": "svgo -f app/static/images --recursive --config=svgo.config.json",
  "scripts": {
    "//": "üí° FUNDCHAMPS SaaS ‚Äî Elite NPM Scripts: lint, audit, build, watch, deploy, a11y",
    "prepare": "husky",
    "postinstall": "npm run update:browsers || true && npm run audit:deps || true",
    "css:build": "tailwindcss -c tailwind.config.cjs -i app/static/css/input.css -o app/static/css/tailwind.min.css --minify",
    "css:dev": "tailwindcss -c tailwind.config.cjs -i app/static/css/input.css -o app/static/css/tailwind.min.css -w",
    "css:verify": "node -e \"const fs=require('fs');const p='app/static/css/tailwind.min.css';if(!fs.existsSync(p)){console.error('‚ùå Missing',p);process.exit(1)};const s=fs.statSync(p).size;console.log('‚úÖ CSS ok:',p,Math.round(s/1024)+'KB')\"",
    "build:js": "esbuild app/static/js/main.js --bundle --format=esm --minify --sourcemap --outfile=app/static/js/main.js --allow-overwrite",
    "watch:js": "esbuild app/static/js/main.js --bundle --format=esm --sourcemap --outfile=app/static/js/main.js --watch --allow-overwrite",
    "dev": "npm-run-all --parallel css:dev watch:js",
    "serve:flask": "FLASK_APP=app:create_app FLASK_ENV=development flask run --reload",
    "serve:flask:win": "cross-env FLASK_APP=app:create_app FLASK_ENV=development flask run --reload",
    "dev:app": "npm-run-all --parallel css:dev watch:js serve:flask",
    "prebuild": "npm run clean:dist",
    "build": "npm run lint && npm run format && npm run css:build && npm run build:js && npm run css:verify",
    "build:fast": "npm run css:build && npm run build:js && npm run css:verify",
    "lint:css": "stylelint 'app/static/css/input.css' 'app/static/css/src/**/*.css' 'app/static/css/luxury.css' --fix --config stylelint.config.cjs --ignore-path .stylelintignore",
    "lint:css:check": "stylelint 'app/static/css/input.css' 'app/static/css/src/**/*.css' 'app/static/css/luxury.css' --config stylelint.config.cjs --ignore-path .stylelintignore",
    "lint:js": "eslint 'app/static/js/**/*.js' --fix",
    "lint:js:check": "eslint 'app/static/js/**/*.js'",
    "lint:html": "htmlhint --config .htmlhintrc 'app/templates/**/*.html' || true",
    "lint:templates": "python scripts/jinja_syntax_check.py",
    "lint:md": "markdownlint README.md \"docs/**/*.md\" \"app/**/*.md\" --ignore-path .markdownlintignore",
    "lint": "npm run lint:css && npm run lint:js && npm run lint:html && npm run lint:md",
    "format": "prettier --write \"**/*.{js,css,html,jinja,jinja2,py,json,md}\"",
    "format:check": "prettier --check \"**/*.{js,css,html,jinja,jinja2,py,json,md}\"",
    "audit:deps": "npm outdated || echo '‚úÖ All dependencies up to date!'",
    "audit:css": "stylelint 'app/static/css/input.css' 'app/static/css/src/**/*.css' 'app/static/css/luxury.css' --config stylelint.config.cjs --ignore-path .stylelintignore || true",
    "audit:js": "eslint 'app/static/js/**/*.js' || true",
    "audit:html": "htmlhint --config .htmlhintrc 'app/templates/**/*.html' || true",
    "audit:md": "markdownlint README.md \"docs/**/*.md\" \"app/**/*.md\" --ignore-path .markdownlintignore || true",
    "audit:bundle": "source-map-explorer app/static/js/main.js || true",
    "audit:full": "npm run lint && npm run format:check && npm run audit:css && npm run audit:js && npm run audit:html && npm run audit:md && npm run audit:deps",
    "clean:dist": "rm -rf .cache dist *.log app/static/css/*.map app/static/js/*.map",
    "clean:hard": "rm -rf node_modules .cache dist *.log app/static/css/tailwind.min.css app/static/css/globals.css app/static/css/*.map app/static/js/*.map",
    "update:browsers": "npx update-browserslist-db@latest",
    "svgo:all": "svgo -f app/static/images --recursive --config=svgo.config.json"
  },
  "devDependencies": {
    "@tailwindcss/aspect-ratio": "^0.4.2",
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/line-clamp": "^0.4.4",
    "@tailwindcss/typography": "^0.5.16",
    "cross-env": "^10.0.0",
    "esbuild": "^0.25.8",
    "eslint": "^9.32.0",
    "htmlhint": "^1.6.3",
    "husky": "^9.1.7",
    "markdownlint-cli": "^0.45.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.6.2",
    "source-map-explorer": "^2.5.3",
    "stylelint": "^16.23.0",
    "stylelint-config-standard": "^39.0.0",
    "stylelint-config-tailwindcss": "^1.0.0",
    "stylelint-order": "^7.0.0",
    "tailwindcss": "^3.4.17",
    "tailwindcss-animate": "^1.0.7"
  }
}
