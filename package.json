{
  "name": "connectatx-fundraiser",
  "version": "1.0.0",
  "description": "Production-ready Flask app for Connect ATX Elite. Modular app factory, SQLAlchemy, Socket.IO, TailwindCSS, and clean blueprints.",
  "private": true,
  "type": "module",
  "main": "eslint.config.js",
  "engines": {
    "node": ">=18.0.0"
  },
  "packageManager": "npm@10",
  "directories": {
    "test": "tests"
  },

  "scripts": {
    "start": "npm run preview",

    "// dev workflow ---------------------------------------------------------": "",
    "dev": "npm-run-all -p css:watch js:watch serve:flask",
    "serve:flask": "cross-env FLASK_APP=app:create_app FLASK_ENV=development flask run --reload",

    "// preview (local prod-ish) --------------------------------------------": "",
    "preview": "npm-run-all -p preview:flask",
    "preview:flask": "flask run --reload --debugger",

    "// JS build -------------------------------------------------------------": "",
    "js:watch": "cross-env NODE_ENV=development node build.js --watch",
    "js:build": "node build.js",
    "js:build:dev": "cross-env NODE_ENV=development node build.js",
    "js:build:prod": "cross-env NODE_ENV=production node build.js",

    "// CSS (PostCSS pipeline w/ Tailwind) ----------------------------------": "",
    "css:watch": "cross-env NODE_ENV=development postcss app/static/css/src/input.css -o app/static/css/app.css --map --watch",
    "css:build": "cross-env NODE_ENV=production postcss app/static/css/src/input.css -o app/static/css/app.css",
    "css:verify": "node -e \"const fs=require('fs');const p='app/static/css/app.css';if(!fs.existsSync(p)){console.error('❌ CSS not built');process.exit(1)};const s=fs.statSync(p).size;console.log('✅ CSS built:',(s/1024).toFixed(1)+'KB')\"",
    "css:budget": "node -e \"const fs=require('fs');const p='app/static/css/app.css';if(!fs.existsSync(p))process.exit(0);const s=fs.statSync(p).size;const kb=(s/1024).toFixed(1);const limit=350; if(s>limit*1024){console.error(`❌ CSS size ${kb}KB > ${limit}KB`);process.exit(1)} else {console.log(`✅ CSS size ${kb}KB ≤ ${limit}KB`)}}\"",

    "// Tailwind CLI convenience (optional) ---------------------------------": "",
    "tw": "tailwindcss -c tailwind.config.mjs -i app/static/css/src/input.css -o app/static/css/app.css",
    "tw:watch": "cross-env NODE_ENV=development npm run tw -- --watch --map",
    "tw:build": "cross-env NODE_ENV=production npm run tw -- --minify",

    "// Lint / format --------------------------------------------------------": "",
    "format": "prettier --write .",
    "check": "prettier --check .",

    "// CI bundles -----------------------------------------------------------": "",
    "build": "npm run format && npm run css:build && npm run js:build:prod && npm run css:verify && npm run css:budget",
    "build:fast": "npm run css:build && npm run js:build:prod && npm run css:verify && npm run css:budget",

    "// Hygiene --------------------------------------------------------------": "",
    "clean:dist": "rimraf .cache dist *.log \"app/static/css/*.map\" \"app/static/js/*.map\" app/static/js/main.bundle.js",
    "clean:hard": "rimraf node_modules package-lock.json .cache dist *.log app/static/css/app.css \"app/static/css/*.map\" \"app/static/js/*.map\" app/static/js/main.bundle.js",
    "update:browsers": "npx update-browserslist-db@latest",

    "// Hooks / audits -------------------------------------------------------": "",
    "prepare": "husky install",
    "precommit": "lint-staged",
    "security": "npm audit --audit-level=high || true",
    "audit:deps": "npm outdated || echo \"✅ All dependencies up to date!\""
  },

  "devDependencies": {
    "@tailwindcss/forms": "^0.5.7",
    "@tailwindcss/typography": "^0.5.15",
    "autoprefixer": "^10.4.21",
    "cssnano": "^6.1.2",
    "cross-env": "^7.0.3",
    "esbuild": "^0.23.0",
    "husky": "^9.1.7",
    "lint-staged": "^15.5.2",
    "npm-run-all": "^4.1.5",
    "postcss": "^8.4.47",
    "postcss-import": "^16.1.0",
    "postcss-nested": "^6.2.0",
    "postcss-safe-parser": "^7.0.0",
    "prettier": "^3.3.3",
    "prettier-plugin-jinja-template": "^1.3.2",
    "prettier-plugin-tailwindcss": "^0.6.8",
    "rimraf": "^5.0.10",
    "tailwindcss": "^3.4.14"
  },

  "lint-staged": {
    "*.{js,cjs,mjs,css,html,jinja,jinja2,py,json,yml,yaml,md}": [
      "prettier --write"
    ]
  },

  "browserslist": [
    ">0.5%",
    "last 2 versions",
    "Firefox ESR",
    "not dead"
  ],

  "repository": {
    "type": "git",
    "url": "git+https://github.com/thelab33/connectatx-fundraiser.git"
  },
  "bugs": {
    "url": "https://github.com/thelab33/connectatx-fundraiser/issues"
  },
  "homepage": "https://github.com/thelab33/connectatx-fundraiser#readme",
  "keywords": [
    "fundraising",
    "nonprofit",
    "flask",
    "tailwindcss",
    "realtime",
    "connectatx",
    "fundchamps",
    "socketio"
  ],
  "author": "TheLab33",
  "license": "MIT"
}

