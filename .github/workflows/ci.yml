# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: ["**"]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test-and-build:
    name: Lint, Test, and Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---------- Python (via uv) ----------
      - name: Setup Python (uv)
        uses: astral-sh/setup-uv@v3
        with:
          python-version: "3.12"

      - name: Install Python deps
        run: uv pip install -r requirements.txt

      - name: Lint (ruff)
        run: uv run ruff check .

      - name: Security (bandit)
        run: uv run bandit -q -r app
        continue-on-error: true   # keep as non-blocking like your original

      - name: Test (pytest)
        run: uv run pytest -q

      # ---------- Web (pnpm + Node) ----------
      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: web/pnpm-lock.yaml

      - name: Web install/lint/test/build
        working-directory: web
        run: |
          pnpm i --frozen-lockfile
          pnpm eslint . --max-warnings=0
          pnpm vitest run
          pnpm build

      - name: Upload web dist
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: web/dist

  deploy:
    name: Deploy (Fly.io)
    needs: test-and-build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl deploy --remote-only

