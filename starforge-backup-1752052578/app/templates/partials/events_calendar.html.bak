<!DOCTYPE html>
<html>
<head>
  <meta name="generator" content=
  "HTML Tidy for HTML5 for Linux version 5.8.0">
  <title></title>
</head>
<body>
  <section id="events-calendar" class=
  "my-20 px-4 sm:px-8 max-w-5xl mx-auto" aria-labelledby=
  "events-heading" tabindex="-1">
    <h2 id="events-heading" class=
    "text-2xl sm:text-3xl font-extrabold bg-gradient-to-r from-yellow-400 via-yellow-300 to-yellow-400 bg-clip-text text-transparent drop-shadow-xl text-center mb-6">
    🗓️ Game & Event Calendar</h2><!-- 🔥 LIVE NEXT GAME BADGE -->
    {% set next_game = events|selectattr('is_upcoming')|list|first
    %} {% if next_game %}
    <div class="flex items-center justify-center mb-7" role=
    "region" aria-label="Next upcoming game" tabindex="0"
    aria-live="polite">
      <span class=
      "inline-flex items-center gap-3 px-5 py-2 rounded-full bg-gradient-to-r from-yellow-300 via-yellow-400 to-yellow-300 text-black text-base font-bold shadow-lg ring-2 ring-yellow-400 animate-pulse">
      <span class="text-xl">⏰</span> Next Game: <span class=
      "font-black text-lg">{{ next_game.date|replace("-", "/")
      }}</span> <span class="font-semibold">vs. {{
      next_game.opponent }}</span> <span class=
      "bg-green-400 text-zinc-900 px-3 py-0.5 rounded-full text-xs font-extrabold ml-3">
      Upcoming</span></span>
    </div>{% endif %} <!-- 🎛️ FILTER BAR -->
    <form id="calendarFilters" class=
    "flex flex-wrap gap-3 justify-center mb-4 text-sm font-bold"
    role="search" aria-label="Filter game and event calendar"
    autocomplete="off" name="calendarFilters">
      <select id="filterOutcome" class=
      "rounded px-3 py-1 bg-zinc-900 text-yellow-400 border-yellow-400/60 focus:ring-2 ring-yellow-400"
      aria-label="Filter by outcome">
        <option value="all">
          All Results
        </option>
        <option value="win">
          Wins 🟢
        </option>
        <option value="loss">
          Losses 🔴
        </option>
        <option value="upcoming">
          Upcoming 🟡
        </option>
      </select> <select id="filterMonth" class=
      "rounded px-3 py-1 bg-zinc-900 text-yellow-400 border-yellow-400/60 focus:ring-2 ring-yellow-400"
      aria-label="Filter by month">
        <option value="all">
          All Months
        </option>
        <option value="{{ m }}">
          {{ m|replace('-', '/') }}
        </option>
      </select> <button type="button" id="downloadIcal" class=
      "rounded px-4 py-1.5 bg-gradient-to-r from-yellow-400 to-yellow-300 text-black font-semibold shadow hover:bg-yellow-300 transition"
      aria-label="Download calendar in iCal format">📅 Download
      iCal</button>
    </form><!-- 📅 CALENDAR TABLE -->
    <div class=
    "overflow-x-auto rounded-xl bg-zinc-900/80 shadow-xl mb-6">
      {% for event in events %} {% endfor %}
      <table class="min-w-full text-left" id="eventTable">
        <thead>
          <tr class=
          "text-yellow-400 bg-zinc-800/80 uppercase text-xs font-bold">
            <th class="py-3 px-4">Date</th>
            <th class="py-3 px-4">Opponent / Event</th>
            <th class="py-3 px-4">Location</th>
            <th class="py-3 px-4">Time</th>
            <th class="py-3 px-4">Result</th>
            <th class="py-3 px-4">Notes</th>
          </tr>
        </thead>
        <tbody>
          <tr class=
          "{% if event.is_upcoming %}bg-yellow-400/20 text-yellow-200{% elif 'W' in event.result %}bg-green-500/20 text-green-100{% elif 'L' in event.result %}bg-red-500/20 text-red-100{% else %}bg-zinc-900/80{% endif %}"
          data-outcome=
          "{% if 'W' in event.result %}win{% elif 'L' in event.result %}loss{% elif event.is_upcoming %}upcoming{% else %}other{% endif %}"
          data-month="{{ event.date[:7] }}">
            <td class="py-3 px-4">{{ event.date|replace("-", "/")
            }}</td>
            <td class="py-3 px-4 font-bold">{{ event.opponent }} {%
            if event.sponsor %} <span class=
            "block text-xs text-yellow-300/80 mt-1">Sponsored by {{
            event.sponsor }}</span> {% endif %}</td>
            <td class="py-3 px-4">{{ event.location }}</td>
            <td class="py-3 px-4">{{ event.time }}</td>
            <td class="py-3 px-4 font-bold">{% if 'W' in
            event.result %}🟢 Win{% elif 'L' in event.result %}🔴
            Loss{% else %}—{% endif %}</td>
            <td class="py-3 px-4 italic">{{ event.highlight }}</td>
          </tr>
        </tbody>
      </table>
    </div><!-- 📝 ICAL EXPORT & FILTER SCRIPT -->
    <script>
    // ---- iCal Export ----
    document.getElementById("downloadIcal").addEventListener("click", () => {
      let ical = "BEGIN:VCALENDAR\nVERSION:2.0\n";
      {% for event in events %}
      ical += `BEGIN:VEVENT\nSUMMARY:{{ event.opponent|escape }}\nDTSTART;VALUE=DATE:{{ event.date|replace("-", "") }}\nDESCRIPTION:{{ event.type|escape }} - {{ event.result|escape }}\nLOCATION:{{ event.location|escape }}\nEND:VEVENT\n`;
      {% endfor %}
      ical += "END:VCALENDAR";
      const blob = new Blob([ical], { type: "text/calendar" });
      const url = URL.createObjectURL(blob);
      const link = document.createElement("a");
      link.href = url;
      link.download = "ConnectATXElite-Schedule.ics";
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      URL.revokeObjectURL(url);
    });

    // ---- Calendar Filters (JS, no reload) ----
    const outcomeSelect = document.getElementById("filterOutcome");
    const monthSelect = document.getElementById("filterMonth");
    const eventRows = document.querySelectorAll("#eventTable tbody tr");

    function filterCalendar() {
      const outcome = outcomeSelect.value;
      const month = monthSelect.value;
      eventRows.forEach(row => {
        const matchOutcome = (outcome === "all") || (row.dataset.outcome === outcome);
        const matchMonth = (month === "all") || (row.dataset.month === month);
        row.style.display = (matchOutcome && matchMonth) ? "" : "none";
      });
    }
    outcomeSelect.addEventListener("change", filterCalendar);
    monthSelect.addEventListener("change", filterCalendar);

    // Accessibility: auto-focus next upcoming game row when filtering to "upcoming"
    outcomeSelect.addEventListener("change", function() {
      if (outcomeSelect.value === "upcoming") {
        const nextRow = document.querySelector('tr[data-outcome="upcoming"]');
        if (nextRow) nextRow.focus();
      }
    });
    </script>
  </section>
</body>
</html>
