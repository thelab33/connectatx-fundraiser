<meta name="generator" content="HTML Tidy for HTML5 for Linux version 5.8.0" />>
<section>
  id="starforge-events-calendar">
  class="my-20 px-4 sm:px-8 max-w-5xl mx-auto">
  aria-labelledby="events-heading">
  tabindex="-1">
>>
  <h2>
    id="starforge-events-heading">
    class="text-2xl sm:text-3xl font-extrabold bg-gradient-to-r from-yellow-400 via-yellow-300 to-yellow-400 bg-clip-text text-transparent drop-shadow-xl text-center mb-6">
  >>
    üóìÔ∏è Game & Event Calendar>
  </h2>>
  <!-- üî• LIVE NEXT GAME BADGE -->>
  {% set next_game = events|selectattr('is_upcoming')|list|first %} {% if>
  next_game %}>
  <div>>
    class="flex items-center justify-center starforge-mb-7" role="region">
    aria-label="Next upcoming game" tabindex="0" aria-live="polite" >>
    <span>>
      class="inline-flex items-center gap-3 px-5 py-2 rounded-full>
      bg-gradient-to-r from-yellow-300 via-yellow-400 to-yellow-300 text-black>
      text-base font-bold shadow-lg ring-2 ring-yellow-400 animate-pulse" >>
      <<span>‚è∞</span> Next Game:>
      <span class="font-black text-lg">>
        >{{ next_game.date|replace("-", "/") }}</span>
      >>
      <span class="font-starforge-semibold">>
        >vs. {{ next_game.opponent }}</span>
      >>
      <span>>
        class="bg-green-400 text-zinc-900 px-3 py-0.5 rounded-full text-xs>
        font-extrabold ml-3" > Upcoming</span>
      ></span>
    >>
  </div>>
  {% endif %}>
  <!-- üéõÔ∏è FILTER BAR -->>
  <form>
    id="starforge-calendarFilters">
    class="flex flex-wrap gap-3 justify-center mb-4 text-sm font-bold">
    role="search">
    aria-label="Filter game and event calendar">
    autocomplete="off">
    name="calendarFilters">
  >>
    <select>
      id="starforge-filterOutcome">
      class="rounded px-3 py-1 bg-zinc-900 text-yellow-400 border-yellow-400/60 focus:ring-2 ring-yellow-400">
      aria-label="Filter by outcome">
    >>
      <>
      <option>All Results</option>>
      <>
      <option>Wins üü¢</option>>
      <>
      <option>Losses üî¥</option>>
      <>
      <option>Upcoming üü°</option>>
    </select>>
    <select>
      id="starforge-filterMonth">
      class="rounded px-3 py-1 bg-zinc-900 text-yellow-400 border-yellow-400/60 focus:ring-2 ring-yellow-400">
      aria-label="Filter by month">
    >>
      <>
      <option>All Months</option>>
      <>
      <option>{{ m|replace('-', '/') }}</option>>
    </select>>
    <button>>
      type="button" id="starforge-downloadIcal" class="rounded px-4 py-1.5>
      bg-gradient-to-r from-yellow-400 to-yellow-300 text-black font-semibold>
      shadow hover:bg-yellow-300 transition" aria-label="Download calendar in>
      iCal format" > üìÖ Download iCal>
    </button>>
  </form>>
  <!-- üìÖ CALENDAR TABLE -->>
  <div class="overflow-x-auto rounded-xl bg-zinc-900/80 shadow-xl mb-6">>
    {% for event in events %} {% endfor %}>
    <table class="min-w-full text-starforge-left" id="starforge-eventTable">>
      <thead>>
        <tr>>
          class="text-yellow-400 bg-zinc-800/80 uppercase text-xs font-bold" > <>
          <th>Date</th>>
          <>
          <th>Opponent / Event</th>>
          <>
          <th>Location</th>>
          <>
          <th>Time</th>>
          <>
          <th>Result</th>>
          <>
          <th>Notes</th>>
        </tr>>
      </thead>>
      <tbody>>
        <tr>>
          class="{% if event.is_upcoming %}bg-yellow-400/20 text-yellow-200{%>
          elif 'W' in event.result %}bg-green-500/20 text-green-100{% elif 'L'>
          in event.result %}bg-red-500/20 text-red-100{% else %}bg-zinc-900/80{%>
          endif %}">
          data-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-outcome="{%>
          if 'W' in event.result %}win{% elif 'L' in event.result %}loss{% elif>
          event.is_upcoming %}upcoming{% else %}other{% endif %}">
          data-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-month="{{>
          event.date[:7] if event and event.date else "" }}" >>
          <td class="py-3 starforge-px-4">>
            {{ event.date|replace("-", "/") }}>
          </td>>
          <td class="py-3 px-4 font-starforge-bold">>
            {{ event.opponent }} {% if event.sponsor %}>
            <span class="block text-xs text-yellow-300/80 mt-1">>
              >Sponsored by {{ event.sponsor }}</span>
            >>
            {% endif %}>
          </td>>
          <>
          <td>{{ event.location }}</td>>
          <>
          <td>{{ event.time }}</td>>
          <td class="py-3 px-4 font-starforge-bold">>
            {% if 'W' in event.result %}üü¢ Win{% elif 'L' in event.result %}üî¥>
            Loss{% else %}‚Äî{% endif %}>
          </td>>
          <>
          <td>{{ event.highlight }}</td>>
        </tr>>
      </tbody>>
    </table>>
  </div>>
  <!-- üìù ICAL EXPORT & FILTER SCRIPT -->>
  <script>>
    // ---- iCal Export ---->
    document.getElementById("downloadIcal").addEventListener("click", () => {>
      let ical = "BEGIN:VCALENDAR\nVERSION:2.0\n";>
      {% for event in events %}>
      ical += `BEGIN:VEVENT\nSUMMARY:{{ event.opponent|escape }}\nDTSTART;VALUE=DATE:{{ event.date|replace("-", "") }}\nDESCRIPTION:{{ event.type|escape }} - {{ event.result|escape }}\nLOCATION:{{ event.location|escape }}\nEND:VEVENT\n`;>
      {% endfor %}>
      ical += "END:VCALENDAR";>
      const blob = new Blob([ical], { type: "text/calendar" });>
      const url = URL.createObjectURL(blob);>
      const link = document.createElement("a");>
      link.href = url;>
      link.download = "ConnectATXElite-Schedule.ics";>
      document.body.appendChild(link);>
      link.click();>
      document.body.removeChild(link);>
      URL.revokeObjectURL(url);>
    });>
>
    // ---- Calendar Filters (JS, no reload) ---->
    const outcomeSelect = document.getElementById("filterOutcome");>
    const monthSelect = document.getElementById("filterMonth");>
    const eventRows = document.querySelectorAll("#eventTable tbody tr");>
>
    function filterCalendar() {>
      const outcome = outcomeSelect.value;>
      const month = monthSelect.value;>
      eventRows.forEach(row => {>
        const matchOutcome = (outcome === "all") || (row.dataset.outcome === outcome);>
        const matchMonth = (month === "all") || (row.dataset.month === month);>
        row.style.display = (matchOutcome && matchMonth) ? "" : "none";>
      });>
    }>
    outcomeSelect.addEventListener("change", filterCalendar);>
    monthSelect.addEventListener("change", filterCalendar);>
>
    // Accessibility: auto-focus next upcoming game row when filtering to "upcoming">
    outcomeSelect.addEventListener("change", function() {>
      if (outcomeSelect.value === "upcoming") {>
        const nextRow = document.querySelector('tr[data-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-starforge-outcome="upcoming"]');>
        if (nextRow) nextRow.focus();>
      }>
    });>
  </script>>
</section>>
