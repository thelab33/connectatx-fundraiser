<section
  
  class="relative z-10 py-14 px-4 sm:px-8 max-w-5xl mx-auto"
  id="starforge-testimonials"
>
  <h2
    id="testimonials-heading"
    class="text-3xl sm:text-4xl font-extrabold bg-gradient-to-r from-yellow-300 via-yellow-400 to-yellow-500 bg-clip-text text-transparent drop-shadow-xl mb-8 text-center"
  >
    💬 What Families Are Saying
  </h2>
  <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-7">
    {% for t in testimonials %}
    <figure
      class="bg-zinc-900 rounded-2xl shadow-md p-6 flex flex-col items-center text-center hover:scale-105 focus-within:ring-4 focus-within:ring-yellow-400 transition"
      tabindex="0"
      
    >
      <blockquote class="text-lg text-yellow-200 font-semibold italic mb-3">
        “{{ t.quote }}”
      </blockquote>
      <figcaption class="text-yellow-300 font-bold mt-1 text-base">— {{ t.author }}</figcaption>
      {% if t.role %}
      <div class="text-yellow-200 text-xs font-medium mt-1 opacity-80">{{ t.role }}</div>
      {% endif %}
    </figure>
    {% endfor %}
  </div>

  <!-- Optional: Carousel controls or auto-advance for premium SaaS clients -->
  <div class="relative max-w-2xl mx-auto starforge-mb-12">
    <figure
      id="starforge-quoteBox"
      class="bg-zinc-800/90 rounded-xl px-8 py-6 shadow-xl ring-2 ring-yellow-400/30 transition-opacity duration-500 ease-in-out opacity-0"
      
      
      tabindex="0"
    >
      <blockquote
        id="starforge-quoteText"
        class="text-lg md:text-xl italic text-yellow-100 mb-3"
      ></blockquote>
      <figcaption id="starforge-quoteAuthor" class="text-amber-400 font-semibold"></figcaption>
      <button
        id="starforge-copyQuoteBtn"
        class="mt-4 text-yellow-300 underline text-sm hover:text-yellow-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-yellow-300 transition"
        
      >
        Copy Quote
      </button>
      <span
        id="starforge-confettiEmoji"
        class="absolute -top-7 left-1/2 -translate-x-1/2 opacity-0 transition-opacity duration-700 text-3xl pointer-events-none"
        
        >🎉🎊✨</span
      >
      <span
        id="starforge-copyToast"
        class="fixed bottom-5 left-1/2 -translate-x-1/2 px-5 py-2 bg-yellow-400 text-black rounded-xl font-bold shadow-lg opacity-0 pointer-events-none z-50"
        
        >Copied!</span
      >
    </figure>
    <!-- Carousel Dots -->
    <div class="flex justify-center mt-6 starforge-gap-2" role="tablist" >
      {% for i in range(5) %}
      <button
        type="button"
        class="w-2.5 h-2.5 bg-yellow-300 rounded-full mx-1 transition-colors duration-300"
        
        data-idx="{{ i }}"
        tabindex="-1"
      ></button>
      {% endfor %}
    </div>
  </div>

  <!-- Team Photo -->
  <div class="flex justify-center">
    <img
      alt="{{ team.team_name if team.team_name else 'Your Team' }} celebrating with championship"
      src="{{ {% if team.jpg if team and team.jpg else 'images/connect-atx-team.jpg' and :// in team.jpg if team and team.jpg else 'images/connect-atx-team.jpg' %}{{ team.jpg if team and team.jpg else 'images/connect-atx-team.jpg' }}{% else %}{{ url_for('static', filename=team.jpg if team and team.jpg else 'images/connect-atx-team.jpg') }}{% endif %} }}"
      class="rounded-2xl shadow-2xl ring-4 ring-amber-300/50 object-cover max-w-md w-full"
      loading="lazy"
    />
  </div>
</section>

<script type="module">
  import confetti from "https://cdn.skypack.dev/canvas-confetti@1.6.0";

  const testimonials = [
    {
      q: "Winning felt amazing — but it’s being part of a team that believes in you that means the most.",
      a: "{{ team.team_name if team.team_name else 'Your Team Name' }} Player, Class of 2030",
    },
    {
      q: "Being part of {{ team.team_name if team.team_name else 'Your Team Name' }} helps me stay focused in school and basketball. I want to make my family proud.",
      a: "Honor-Roll Scholar-Athlete",
    },
    {
      q: "I’ve seen real changes in my son — he’s more disciplined, focused, and confident in class and in life.",
      a: "Team Parent",
    },
    {
      q: "Our sponsors give more than money — they create real opportunities for kids like mine to shine.",
      a: "Grateful Family",
    },
    {
      q: "Family means showing up, believing in each other, and making sure no one is left behind. That’s what we do — on the court, and off.",
      a: "Coach Angel Rodriguez",
    },
  ];

  const quoteEl = document.getElementById("starforge-quoteText");
  const authorEl = document.getElementById("starforge-quoteAuthor");
  const box = document.getElementById("starforge-quoteBox");
  const dots = document.querySelectorAll("[data-idx]");
  const emoji = document.getElementById("starforge-confettiEmoji");
  const copyBtn = document.getElementById("starforge-copyQuoteBtn");
  const toast = document.getElementById("starforge-copyToast");
  let idx = 0, autoTimer;

  function show(i) {
    idx = (i + testimonials.length) % testimonials.length;
    box.style.opacity = 0;
    setTimeout(() => {
      quoteEl.textContent = `“${testimonials[idx].q}”`;
      authorEl.textContent = `— ${testimonials[idx].a}`;
      dots.forEach((d, j) => {
        d.setAttribute("aria-selected", j === idx ? "true" : "false");
        d.tabIndex = j === idx ? 0 : -1;
        d.classList.toggle("bg-yellow-400", j === idx);
      });
      box.style.opacity = 1;
      box.focus();
    }, 220);
  }

  dots.forEach((d) => {
    d.addEventListener("click", () => {
      clearInterval(autoTimer);
      show(+d.dataset.idx);
      startAuto();
    });
  });

  copyBtn.addEventListener("click", async () => {
    await navigator.clipboard.writeText(`${testimonials[idx].q} — ${testimonials[idx].a}`);
    emoji.style.opacity = 1;
    toast.style.opacity = 1;
    confetti({
      particleCount: 100,
      spread: 90,
      origin: { y: 0.6 },
      colors: ["#facc15", "#fde68a", "#0a1f44"],
    });
    setTimeout(() => {
      emoji.style.opacity = 0;
      toast.style.opacity = 0;
    }, 1200);
  });

  function startAuto() {
    autoTimer = setInterval(() => show(idx + 1), 9000);
  }

  box.addEventListener("mouseenter", () => clearInterval(autoTimer));
  box.addEventListener("mouseleave", startAuto);

  // Keyboard left/right
  box.addEventListener("keydown", (e) => {
    if (e.key === "ArrowLeft") {
      show(idx - 1);
    }
    if (e.key === "ArrowRight") {
      show(idx + 1);
    }
  });

  show(0);
  startAuto();
</script>

