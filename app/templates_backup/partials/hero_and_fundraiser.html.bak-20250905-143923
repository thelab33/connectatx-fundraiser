{# ============================================================
   FC HERO — SV-Elite 6.4 (Cinema Hologram • Red-Guarded • Meter Live Sync)
   a11y: stronger aria for progress/timer; compact currency on XS
   perf: LCP preload; optional font preload; crossorigin hints
   UX: CTA modal bridge fallback; robust share; belt ResizeObserver
   data: listens for fc:meter:update & fc:funds:update
   CSP-safe (nonce), motion/contrast/forced-colors fallbacks
   ============================================================ #}
{% set NONCE = NONCE if NONCE is defined else (csp_nonce() if csp_nonce is defined else '') %}
{% macro nonce_attr() -%}nonce="{{ NONCE }}"{%- endmacro %}

{# ---------- Theme + content ---------- #}
{% set theme_hex   = theme_hex|default('#facc15') %}
{% set team_name   = (team.team_name if team and team.team_name else 'Connect ATX Elite') %}
{% set hero_title  = hero_title|default('Fuel the Season. Fund the Future.') %}
{% set catch_line  = (catch_phrase if catch_phrase is defined and catch_phrase else
                      'Direct support for gear, travel, and tutoring—every dollar moves a kid forward.') %}
{% set show_brand_chip = show_brand_chip if show_brand_chip is defined else false %}

{# ---------- Images (robust fallbacks) ---------- #}
{% set _hero_src = (
  (hero_image_url if hero_image_url is defined and hero_image_url) or
  (team.hero_bg if team and team.hero_bg) or
  (team.hero_image if team and team.hero_image) or
  (team.team_photo if team and team.team_photo) or
  (team.photo_url if team and team.photo_url) or
  'images/connect-atx-team.jpg'
) %}
{% set _hero_mobile     = (hero_image_mobile_url if hero_image_mobile_url is defined and hero_image_mobile_url else _hero_src) %}
{% set hero_src         = (_hero_src if '://' in _hero_src else (url_for('static', filename=_hero_src.lstrip('/')) if url_for is defined else '/static/' ~ _hero_src.lstrip('/'))) %}
{% set hero_src_mobile  = (_hero_mobile if '://' in _hero_mobile else (url_for('static', filename=_hero_mobile.lstrip('/')) if url_for is defined else '/static/' ~ _hero_mobile.lstrip('/'))) %}
{% set hero_alt         = (hero_alt if hero_alt is defined and hero_alt) or (team_name ~ ' team photo') %}

{# ---------- Logo (SEO only) ---------- #}
{% set _logo   = (team.logo if team and team.logo else 'images/logo.webp') %}
{% set logoSrc = (_logo if _logo.startswith('http') else (url_for('static', filename=_logo.lstrip('/')) if url_for is defined else '/static/' ~ _logo.lstrip('/'))) %}

{# ---------- Fundraising figures + deadline ---------- #}
{% set funds_raised     = (funds_raised if funds_raised is defined else 0) | float %}
{% set fundraising_goal = (fundraising_goal if fundraising_goal is defined and fundraising_goal is not none and fundraising_goal != 0 else 10000) | float %}
{% set _raw_pct         = (funds_raised / fundraising_goal * 100) if fundraising_goal else 0 %}
{% set pct              = 0 if _raw_pct < 0 else (100 if _raw_pct > 100 else _raw_pct) %}
{% set fundraising_deadline = fundraising_deadline if fundraising_deadline is defined else (deadline_dt if deadline_dt is defined else None) %}
{% set deadline_iso = fundraising_deadline.isoformat() if fundraising_deadline else '' %}

{# ---------- Visual tuning ---------- #}
{% set img_pos_x = img_pos_x|default('50%') %}
{% set img_pos_y = img_pos_y|default('32%') %}

{# ---------- Locale/Currency ---------- #}
{% set currency_code = currency_code|default('USD') %}
{% set locale_str    = locale_str|default('en-US') %}

{# ---------- Match window ---------- #}
{% set match_start_iso = (match_start if match_start is defined and match_start else None) and match_start.isoformat() or '' %}
{% set match_end_iso   = (match_end   if match_end   is defined and match_end   else None) and match_end.isoformat()   or '' %}

{# ---------- CTA href + UTM (safe) ---------- #}
{% set _raw_cta = (stripe_payment_link if stripe_payment_link else (cta_href if cta_href is defined else '#tiers')) %}
{% set _sep = '&' if '?' in _raw_cta else '?' %}
{% set cta_href = _raw_cta ~ _sep ~ 'utm_source=hero&utm_medium=cta&utm_campaign=' ~ (team_name|urlencode) %}
{% set cta_label = (cta_label if cta_label else 'Donate') %}
{% set _cta_is_donate = (cta_label|lower)[:6] == 'donate' %}
{% set _cta_external = ('://' in cta_href) %}

{# ---------- Perf: LCP + optional font preload ---------- #}
<link rel="preload" as="image" href="{{ hero_src }}"
      imagesrcset="{{ hero_src }} 1920w, {{ hero_src_mobile }} 1280w"
      imagesizes="100vw" crossorigin="anonymous"/>
{% if preload_font_path is defined %}
<link rel="preload" as="font" href="{{ preload_font_path }}" type="font/woff2" crossorigin>
{% elif url_for is defined %}
{# safe default if you ship the font: update filename if needed #}
{# <link rel="preload" as="font" href="{{ url_for('static', filename='fonts/plusjakarta-var.woff2') }}" type="font/woff2" crossorigin> #}
{% endif %}

<section id="fc-hero"
         class="fc-hero-tilt grid place-items-center px-4 sm:px-6 w-full -translate-y-[6px] md:-translate-y-[10px]"
         data-theme="athletic" data-hero-scope="cinema"
         aria-labelledby="hero-heading"
         itemscope itemtype="https://schema.org/SportsTeam"
         style="--accent: {{ theme_hex }}; --img-x: {{ img_pos_x }}; --img-y: {{ img_pos_y }};"
         data-locale="{{ locale_str }}" data-currency="{{ currency_code }}"
         data-where="hero" data-p2p-propagate="1">
  <meta itemprop="name" content="{{ team_name }}"/>
  <meta itemprop="sport" content="Basketball"/>
  {% if logoSrc %}<meta itemprop="logo" content="{{ logoSrc }}"/>{% endif %}
  <meta itemprop="image" content="{{ hero_src }}"/>

  <!-- Ambient background (decorative) -->
  <div class="absolute inset-0 -z-10" aria-hidden="true">
    <div class="absolute inset-0 bg-[radial-gradient(80%_60%_at_50%_0%,#0b0b0c_0%,#050609_70%)] light:bg-[radial-gradient(80%_60%_at_50%_0%,#f9fafb_0%,#e5e7eb_70%)]"></div>
    <div class="absolute inset-0 bg-[radial-gradient(120%_70%_at_50%_20%,rgba(0,0,0,.28),transparent_60%)] light:bg-[radial-gradient(120%_70%_at_50%_20%,rgba(0,0,0,.06),transparent_60%)] pointer-events-none"></div>
  </div>

  <!-- Hero Card -->
  <div class="fc-hero-tilt grid place-items-center w-full">
    <figure class="fc-hero-card" role="group" aria-label="Team hero">
      <div class="fc-hero-card__ring" aria-hidden="true"></div>

      <div class="fc-hero-card__frame">
        <picture>
          <!-- Desktop -->
          <source type="image/avif" srcset="{{ hero_src }} 1920w" media="(min-width:768px)" sizes="100vw"/>
          <source type="image/webp" srcset="{{ hero_src }} 1920w" media="(min-width:768px)" sizes="100vw"/>
          <!-- Mobile -->
          <source type="image/avif" srcset="{{ hero_src_mobile }} 1280w" media="(max-width:767px)" sizes="100vw"/>
          <source type="image/webp" srcset="{{ hero_src_mobile }} 1280w" media="(max-width:767px)" sizes="100vw"/>
          <img id="fc-hero-img"
               src="{{ hero_src }}" alt="{{ hero_alt }}"
               class="fc-hero-card__img"
               loading="eager" decoding="async" fetchpriority="high"
               width="1920" height="1080" draggable="false"
               data-parallax-y="8" data-lcp-target="1"
               crossorigin="anonymous"/>
        </picture>

        <!-- Dynamic tint & decorations -->
        <i class="fc-hero-card__tint" aria-hidden="true"></i>
        <i class="fc-hero-card__belt" aria-hidden="true"></i>
        <i class="fc-hero-card__glare" aria-hidden="true"></i>
        <i class="fc-hero-card__noise" aria-hidden="true"></i>

        <!-- Overlay -->
        <figcaption class="fc-hero-overlay flex flex-col items-center text-center gap-4">
          {% if show_brand_chip %}
          <div class="fc-hero-brand flex items-center gap-2">
            <img src="{{ logoSrc }}" alt="" loading="eager" decoding="async"
                 class="h-9 w-9 rounded-xl ring-1 ring-white/10 bg-white/95"/>
            <span class="legacy-chip font-semibold tracking-wide">{{ team_name }}</span>
          </div>
          {% endif %}

          <!-- Vertical spine (decorative) -->
          <div class="fc-hero-spine" aria-hidden="true">
            <span class="spine-text">{{ team_name }}</span>
          </div>

          <!-- Headline -->
          <h1 id="hero-heading" class="fc-hero-type holo3d text-balance"
              data-text="{{ hero_title }}">{{ hero_title }}</h1>

          <!-- Subdeck -->
          <div class="subdeck" aria-describedby="hero-subtitle">
            <p id="hero-subtitle" class="subhead text-balance">{{ catch_line }}</p>
            <ul class="impact-chips" role="list" aria-label="What your gift covers">
              <li class="chip-item" aria-label="Team gear"><span class="chip-emoji" aria-hidden="true">🎒</span><span class="chip-text">Gear</span></li>
              <li class="chip-item" aria-label="Tournament travel"><span class="chip-emoji" aria-hidden="true">🚌</span><span class="chip-text">Travel</span></li>
              <li class="chip-item" aria-label="Academic tutoring"><span class="chip-emoji" aria-hidden="true">📚</span><span class="chip-text">Tutoring</span></li>
            </ul>
          </div>

          <!-- Actions -->
          <div class="fc-hero-actions flex flex-wrap justify-center items-center gap-2" role="group" aria-label="Hero actions">
            <a href="{{ cta_href }}"
               {% if stripe_payment_link %}data-payment-link="{{ stripe_payment_link }}"{% endif %}
               {% if not stripe_payment_link and 'donate' in cta_href %}data-open-donate-modal{% endif %}
               class="fc-hero-cta cta-pulse"
               data-label-full="{{ cta_label }}"
               data-label-compact="{{ 'Donate' if _cta_is_donate else 'Join Now' }}"
               data-haptic="light"
               data-autofocus-when-visible="1"
               data-urgency-deadline="{{ deadline_iso }}"
               data-analytics="cta:hero"
               aria-describedby="hero-subtitle{% if deadline_iso %} hero-countdown{% endif %}"
               {% if _cta_external %}target="_blank" rel="nofollow noopener noreferrer"{% endif %}>
               <span class="cta-text">{{ cta_label }}</span> <span aria-hidden="true">→</span>
            </a>

            {% if deadline_iso %}
              <span id="hero-countdown" class="chip fc-hero-chip--mini"
                    role="timer" aria-live="polite" aria-atomic="true"
                    title="Time remaining">⏳ —</span>
            {% endif %}

            <button id="hero-share" type="button"
                    class="chip fc-hero-chip--mini"
                    aria-label="Share this fundraiser"
                    data-share='{{ {
                      "title": team_name,
                      "text": "Support our season!",
                      "url": (request.base_url if request is defined else "/")
                    } | tojson }}'>
              ↗︎ Share
            </button>

            <span id="match-chip"
                  class="chip fc-hero-chip--mini hidden"
                  data-match-start="{{ match_start_iso }}"
                  data-match-end="{{ match_end_iso }}"
                  data-match-label="{{ match_label|default('Match ×2 Active') }}">
              🎯 Match ×2 Active
            </span>
          </div>

          {# Mini meter (adds aria-valuetext for SRs) #}
          <div class="hero-meter w-full max-w-xl"
               role="progressbar" aria-valuemin="0" aria-valuemax="100"
               aria-valuenow="{{ pct|round(1) }}" aria-label="Fundraising progress"
               aria-valuetext="Raised {{ '${:,.0f}'.format(funds_raised) }} of {{ '${:,.0f}'.format(fundraising_goal) }} ({{ pct|round(0) }}%)"
               data-milestones="25,50,75,100">
            <div class="hm-track" aria-hidden="true">
              <div id="hero-fill" class="hm-fill" style="width: {{ pct|round(1) }}%"></div>
              <div class="hm-ticks" aria-hidden="true"></div>
            </div>
            <div class="hm-stats mt-1 text-sm text-zinc-200">
              <span id="hero-raised" class="tabular" data-count="{{ funds_raised|round(0) }}" data-raw="{{ funds_raised|round(0) }}">{{ '${:,.0f}'.format(funds_raised) }}</span>
              <span class="muted">/</span>
              <span id="hero-goal" class="tabular" data-raw="{{ fundraising_goal|round(0) }}">{{ '${:,.0f}'.format(fundraising_goal) }}</span>
              <span class="muted">·</span>
              <strong id="hero-pct" class="tabular" data-count="{{ pct|round(0) }}">{{ pct|round(0) }}%</strong>
              <span class="sr-only" id="hero-sr" aria-live="polite"></span>
            </div>
            <ul id="hero-milestones" class="milestones" aria-hidden="true"></ul>
          </div>

          <!-- Donor ticker -->
          <div id="donor-ticker" class="dt-wrap" aria-label="Recent donors" aria-live="polite">
            <div class="dt-track"></div>
          </div>

          <!-- Confetti outlet -->
          <div id="confetti" aria-hidden="true"></div>

          <!-- Trust row (single, consistent) -->
          <div class="fc-hero-badges flex flex-wrap justify-center gap-2 mt-2" aria-hidden="true">
            <span class="badge">🔒 Secure via Stripe</span>
            <span class="badge">/GPay Ready</span>
            <span class="badge">📄 Receipt E-mailed</span>
          </div>
        </figcaption>
      </div>
    </figure>
  </div>

  {% if show_gym_ribbon is defined and show_gym_ribbon %}
    <aside class="mt-6 w-full max-w-2xl mx-auto">
      <div class="flex flex-col sm:flex-row items-center justify-between
                  bg-zinc-900/80 light:bg-white/70 border border-white/10 rounded-2xl px-6 py-3 shadow-lg">
        <div class="text-sm sm:text-base font-medium text-zinc-100 light:text-zinc-800 flex-1 text-center sm:text-left">
          🏟️ Gym Rental:
          <span class="ml-1 font-bold">
            {{ gym_sponsor.name if gym_sponsor and gym_sponsor.name else "Available for Sponsorship" }}
          </span>
        </div>
        <div class="text-xs sm:text-sm text-zinc-300 light:text-zinc-700 flex-1 text-center sm:mt-0 mt-2 sm:text-right">
          {{ gym_sponsor.location if gym_sponsor and gym_sponsor.location else 'TBD' }} · {{ gym_sponsor.date if gym_sponsor and gym_sponsor.date else 'TBD' }}
          <button type="button"
            class="ml-3 px-4 py-1 rounded-full border border-white/15 bg-white/5 light:border-zinc-300 light:bg-white/70
                   text-zinc-100 light:text-zinc-900 hover:bg-white/10 light:hover:bg-white/80 focus:outline-none focus-visible:ring-2"
            style="--tw-ring-color: var(--accent);"
            {% if sponsor_modal_target is defined %}data-open-modal="{{ sponsor_modal_target }}"{% else %}data-open-modal="gym"{% endif %}>
            Sponsor a Gym
          </button>
        </div>
      </div>
      {% if not gym_sponsor %}
        <div class="text-center mt-1 text-xs text-zinc-400 light:text-zinc-600">👀 Your name could be here next week!</div>
      {% endif %}
    </aside>
  {% endif %}
</section>

<style nonce="{{ NONCE }}">
/* ================= SV-ELITE 6.4 — Styles (Cinema Hologram • Polished) ================ */
#fc-hero{
  /* Tokens */
  --accent:#facc15;
  --holo-a:#dbeafe; --holo-b:#a78bfa; --holo-c:#fcd34d;
  --shadow:0 25px 80px rgba(0,0,0,.55);
  --overlay-dark:linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(0,0,0,.68) 42%, rgba(0,0,0,.97) 100%);
  --overlay-light:linear-gradient(180deg, rgba(255,255,255,0) 0%, rgba(255,255,255,.86) 58%, rgba(255,255,255,.96) 100%);
  --tint:0;
  --mx:50%; --my:40%;
  --hero-shift:clamp(8vh, 22vh, 30vh);
  --hero-shift-sm:clamp(4vh, 12vh, 16vh);
  color-scheme:dark light;
}

.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border:0}
.tabular{font-variant-numeric:tabular-nums}

/* Typography (conic sheen) */
#fc-hero .fc-hero-type{
  font-family:"Plus Jakarta Sans","Inter",system-ui,sans-serif;
  text-transform:uppercase; letter-spacing:.02em; line-height:.98; font-weight:900;
  font-size:clamp(2rem,1.2rem + 4vw,3.6rem);
  color:transparent;
  background:conic-gradient(from 210deg at var(--mx) var(--my),
    var(--holo-a) 0%, var(--holo-b) 30%, var(--holo-c) 58%, var(--accent) 76%, #fff 100%);
  -webkit-background-clip:text; background-clip:text;
  text-shadow:0 2px 0 rgba(0,0,0,.45), 0 22px 40px rgba(0,0,0,.35);
  font-synthesis-weight:none;
}

/* Tilted card */
#fc-hero .fc-hero-tilt{ perspective:1400px }
#fc-hero .fc-hero-card{
  --r:clamp(20px,1.6vw,28px);
  position:relative; width:min(1080px,92vw); aspect-ratio:16/9;
  transform-style:preserve-3d; will-change:transform;
  container-type:inline-size; /* future-proof for CQ */
}
#fc-hero .fc-hero-card__ring{
  position:absolute; inset:-2px; border-radius:calc(var(--r) + 2px);
  background:linear-gradient(#0000,#0000) padding-box,
             conic-gradient(from 180deg at 50% 50%, color-mix(in srgb, var(--accent) 55%, #fff 45%), #e5e7eb, color-mix(in srgb, var(--accent) 55%, #fff 45%)) border-box;
  border:1.5px solid transparent; filter:drop-shadow(0 18px 50px rgba(0,0,0,.45)); z-index:0;
}
#fc-hero .fc-hero-card__frame{
  position:absolute; inset:0; z-index:1; border-radius:var(--r);
  background:linear-gradient(180deg,rgba(255,255,255,.06),rgba(255,255,255,.03));
  border:1px solid rgba(255,255,255,.12);
  box-shadow:var(--shadow), inset 0 1px 0 rgba(255,255,255,.06), inset 0 0 0 1px rgba(255,255,255,.04);
  overflow:hidden; transform:translateZ(40px);
  -webkit-backdrop-filter:blur(6px); backdrop-filter:blur(6px);
}
#fc-hero .fc-hero-card__img{
  width:100%; height:100%; object-fit:cover; object-position:var(--img-x) var(--img-y);
  transform:translateZ(20px) scale(1.02);
  filter:saturate(1.04) contrast(1.04) brightness(.88);
  user-select:none; -webkit-user-drag:none; image-rendering:auto;
}
#fc-hero .fc-hero-card__img.is-broken{ filter:none; opacity:.95 }

/* Dynamic tint */
#fc-hero .fc-hero-card__tint{
  position:absolute; inset:0; pointer-events:none; z-index:1;
  background:radial-gradient(120% 70% at 50% 20%, rgba(0,0,0,var(--tint)), rgba(0,0,0,calc(var(--tint) * .52)) 60%, transparent 100%);
}

/* Title belt scrim */
#fc-hero .fc-hero-card__belt{
  position:absolute; inset-inline:6%; top:45%; height:var(--belt-h, 5rem);
  pointer-events:none; z-index:1;
  background:linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(0,0,0,var(--belt, .42)) 18%, rgba(0,0,0,var(--belt, .52)) 50%, rgba(0,0,0,var(--belt, .42)) 82%, rgba(0,0,0,0) 100%);
  filter:blur(1px); border-radius:22px;
}
@media (forced-colors:active){
  #fc-hero .fc-hero-card__belt{ background:Canvas; filter:none; border:1px solid CanvasText }
}

/* Glare + film grain */
#fc-hero .fc-hero-card__glare{
  position:absolute; inset:-20%; mix-blend-mode:screen; pointer-events:none; transform:translateZ(60px);
  background:radial-gradient(40% 60% at var(--mx) var(--my), rgba(255,255,255,.16), transparent 60%);
}
#fc-hero .fc-hero-card__noise{
  position:absolute; inset:0; pointer-events:none; opacity:.08; transform:translateZ(80px);
  background-image:url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='160' height='160' viewBox='0 0 160 160'><filter id='n'><feTurbulence type='fractalNoise' baseFrequency='.9' numOctaves='2' stitchTiles='stitch'/></filter><rect width='100%' height='100%' filter='url(%23n)' opacity='.35'/></svg>");
  background-size:160px 160px;
}

/* Overlay */
#fc-hero .fc-hero-overlay{
  position:absolute; inset-inline:0; bottom:0; display:flex; flex-direction:column; gap:.75rem; align-items:center; text-align:center;
  padding:var(--hero-shift, clamp(8vh,22vh,30vh)) clamp(1rem, 2vw, 1.6rem) calc(1rem + env(safe-area-inset-bottom,0px));
  background:var(--overlay-dark);
}
@media (max-width:640px){ #fc-hero .fc-hero-overlay{ padding-top:var(--hero-shift-sm, clamp(4vh,12vh,16vh)) } }
.light #fc-hero .fc-hero-overlay{ background:var(--overlay-light); color:#111 }

/* Actions */
#fc-hero .fc-hero-actions{ display:flex; flex-wrap:wrap; align-items:center; justify-content:center; gap:.5rem .65rem }
#fc-hero .chip{
  display:inline-flex; align-items:center; gap:.4rem; padding:.38rem .7rem; border-radius:.8rem;
  background:rgba(255,255,255,.08); border:1px solid rgba(255,255,255,.16);
  color:#e7ebf2; font-weight:800; font-size:.86rem; -webkit-backdrop-filter:blur(6px); backdrop-filter:blur(6px);
}
#fc-hero .fc-hero-chip--mini{ font-size:.8rem; padding:.3rem .6rem }
#fc-hero .chip:focus-visible{
  outline:2px solid color-mix(in srgb, var(--accent) 60%, #ffffff 40%); outline-offset:3px;
}

/* CTA */
#fc-hero .fc-hero-cta{
  display:inline-flex; align-items:center; justify-content:center; gap:.5rem;
  border-radius:999px; font-weight:800; font-size:clamp(.95rem,.9rem + .2vw,1.1rem);
  padding:.85rem 1.3rem; min-height:44px;
  text-decoration:none; background:#0b0f15; color:#fff; border:1px solid #000;
  box-shadow:0 8px 28px rgba(0,0,0,.25); transition:transform .2s, filter .2s, box-shadow .2s;
}
@media (hover:hover){
  #fc-hero .fc-hero-cta:hover{ transform:translateY(-1px); filter:brightness(1.08); box-shadow:0 10px 34px rgba(0,0,0,.32) }
}
#fc-hero .fc-hero-cta:focus-visible{
  outline:2px solid color-mix(in srgb, var(--accent) 60%, #ffffff 40%); outline-offset:3px;
}
@media (pointer:coarse){ #fc-hero .fc-hero-cta{ padding:1rem 1.25rem } }
@media (prefers-reduced-motion:no-preference){
  .cta-pulse{ position:relative }
  .cta-pulse:after{
    content:""; position:absolute; inset:-3px; border-radius:999px;
    border:2px solid color-mix(in srgb, var(--accent) 55%, transparent);
    opacity:0; animation:heroPulse 2.6s ease-out infinite;
  }
  @keyframes heroPulse{ 0%{transform:scale(.98);opacity:0} 40%{opacity:.55} 100%{transform:scale(1.08);opacity:0} }
}

/* Meter */
#fc-hero .hero-meter{ width:100%; max-width:min(720px,92%) }
#fc-hero .hm-track{
  position:relative; height:14px; border-radius:9999px; overflow:hidden; background:rgba(255,255,255,.16);
  box-shadow:inset 0 0 0 1px rgba(255,255,255,.10);
}
#fc-hero .hm-ticks{
  position:absolute; inset:0; pointer-events:none;
  background:repeating-linear-gradient(90deg, rgba(255,255,255,.24) 0, rgba(255,255,255,.24) 1px, transparent 1px, transparent 5%);
  opacity:.28;
}
#fc-hero .hm-fill{
  position:absolute; inset-block:0; left:0;
  background:linear-gradient(90deg,#e5e7eb, color-mix(in srgb, var(--accent) 45%, #d1d5db 55%));
  box-shadow:0 0 10px color-mix(in srgb, var(--accent) 25%, transparent);
  transition:width .6s cubic-bezier(.2,.8,.2,1);
}
#fc-hero .hm-stats{ margin-top:.35rem; color:#e5e7eb; font-size:.9rem }
#fc-hero .hm-stats .muted{ opacity:.7; margin:0 .35rem }
.light #fc-hero .hm-track{ background:rgba(17,17,17,.08) }
.light #fc-hero .hm-stats{ color:#111 }

/* Milestones */
#fc-hero .milestones{ display:flex; gap:.35rem; justify-content:center; margin-top:.4rem; flex-wrap:wrap }
#fc-hero .milestones li{
  list-style:none; font-size:.72rem; font-weight:800; letter-spacing:.02em;
  padding:.18rem .45rem; border-radius:.6rem; border:1px solid rgba(255,255,255,.20);
  background:linear-gradient(180deg,rgba(255,255,255,.14),rgba(255,255,255,.05)); color:#e5e7eb;
  transition:transform .2s ease;
}
#fc-hero .milestones li.hit{ transform:scale(1.02) }

/* Donor ticker */
#donor-ticker{ width:100%; max-width:48rem; overflow:hidden; display:none; margin-top:.25rem }
#donor-ticker .dt-track{
  display:flex; gap:10px; white-space:nowrap; will-change:transform; contain:content;
  mask-image:linear-gradient(to right, transparent 0, black 5%, black 95%, transparent 100%);
  -webkit-mask-image:linear-gradient(to right, transparent 0, black 5%, black 95%, transparent 100%);
}
#donor-ticker .dt-item{
  display:inline-flex; align-items:center; gap:.4rem; padding:.3rem .6rem; border-radius:999px;
  background:rgba(255,255,255,.08); border:1px solid rgba(255,255,255,.16); color:#e5e7eb; font-weight:700; font-size:.8rem;
}
#donor-ticker .dt-item strong{ font-weight:800 }
#donor-ticker .dt-item i{ font-style:normal; opacity:.9 }
@media (prefers-reduced-motion:no-preference){
  #donor-ticker[data-run="1"] .dt-track{ animation:ticker 20s linear infinite }
  @keyframes ticker{ from{ transform:translateX(0) } to{ transform:translateX(-50%) } }
}

/* Confetti */
#confetti{ position:absolute; inset:0; pointer-events:none }
.confetti-piece{
  position:absolute; width:8px; height:12px; border-radius:2px; opacity:.95;
  transform:translateY(-20px) rotate(0deg); animation:confettiFall 900ms cubic-bezier(.2,.8,.2,1) forwards;
}
@keyframes confettiFall{ 0%{ transform:translateY(-20px) rotate(0deg) } 100%{ transform:translateY(80px) rotate(240deg); opacity:.0 } }

/* ===== Hologram 3D (headline) ===== */
#fc-hero .holo3d{
  position:relative; --holo-stroke:.8px; --holo-plate:.65; --holo-glow:.85; --holo-depth:90px; --holo-tilt:6.5deg;
  text-shadow:0 0 calc(var(--holo-stroke)*3) rgba(0,0,0,.78), 0 1px calc(var(--holo-stroke)*2) rgba(0,0,0,.45), 0 0 28px rgba(255,255,255,var(--holo-glow));
  transform:translateZ(var(--holo-depth)); will-change:transform, filter;
}
#fc-hero .holo3d::before{
  content:""; position:absolute; inset:-0.35em -0.7em; z-index:-1; border-radius:20px;
  background:radial-gradient(60% 52% at var(--mx) var(--my), rgba(0,0,0,.55), rgba(0,0,0,.3) 40%, transparent 72%);
  border:1px solid rgba(255,255,255,.12); box-shadow:0 18px 50px rgba(0,0,0,.5);
  -webkit-backdrop-filter:blur(7px) saturate(130%); backdrop-filter:blur(7px) saturate(130%); opacity:var(--holo-plate);
}
#fc-hero .holo3d::after{
  content:attr(data-text); position:absolute; inset:0; color:transparent;
  background:linear-gradient(90deg, rgba(0,255,255,.9), rgba(255,64,128,.75));
  -webkit-background-clip:text; background-clip:text; mix-blend-mode:screen;
  transform:translateX(calc((var(--mx) - 50%) * .02)) translateY(calc((var(--my) - 50%) * .02));
  filter:blur(.4px); pointer-events:none; opacity:.52;
}
@media (prefers-reduced-motion:no-preference){
  #fc-hero .holo3d{
    background-image:linear-gradient(120deg, transparent 0%, rgba(255,255,255,.25) 48%, transparent 52%);
    background-size:180% 180%; background-position:var(--mx) var(--my);
    -webkit-background-clip:text; background-clip:text;
  }
}
@media (prefers-reduced-motion:reduce){
  #fc-hero .holo3d{ background-image:none !important; text-shadow:0 1px 2px rgba(0,0,0,.6) }
}
@media (forced-colors:active){
  #fc-hero .holo3d, #fc-hero .holo3d::after{ text-shadow:none; filter:none }
  #fc-hero .holo3d::before{ display:none }
  #fc-hero .holo3d{ color:CanvasText; -webkit-background-clip:initial; background:none }
}
@supports not ((-webkit-backdrop-filter:blur(1px)) or (backdrop-filter:blur(1px))){
  #fc-hero .holo3d::before{ background:rgba(0,0,0,.55); border-color:rgba(255,255,255,.08) }
}

/* Red-dominant background boost (target .holo3d) */
#fc-hero[data-holo-boost="1"] .fc-hero-type.holo3d{
  -webkit-text-stroke-width:1.5px;
  text-shadow:0 1px 0 rgba(0,0,0,.75), 0 0 2px rgba(0,0,0,.65), 0 14px 32px rgba(0,0,0,.45),
              0 0 12px rgba(64,240,255,.35), 0 0 6px color-mix(in srgb, var(--accent) 55%, #fff 45%);
  filter:drop-shadow(0 14px 28px rgba(0,0,0,.42));
}

/* Vertical spine */
#fc-hero .fc-hero-spine{
  position:absolute; inset-block:6%; left:12px; width:52px;
  display:flex; align-items:center; justify-content:center; border-radius:999px; z-index:3; overflow:hidden;
  background:radial-gradient(100% 100% at 50% 0%, color-mix(in srgb, var(--accent) 22%, rgb(0 0 0 / 65%)) 0%, rgb(15 17 23 / 95%) 45%, rgb(15 17 23 / 88%) 100%);
  box-shadow:inset 0 0 0 1px rgb(255 255 255 / 6%), inset 0 1px 0 rgb(255 255 255 / 8%), 0 12px 30px rgb(0 0 0 / 45%);
}
#fc-hero .fc-hero-spine::before{ content:""; position:absolute; inset:-20%; background:linear-gradient(180deg, rgb(255 255 255 / 6%), rgb(255 255 255 / 0%)); transform:skewY(-8deg) translateY(-12%); pointer-events:none; }
#fc-hero .fc-hero-spine .spine-text{ writing-mode:vertical-rl; text-orientation:mixed; letter-spacing:.25em; text-transform:uppercase; font-weight:800; font-size:.75rem; color:#e5e7eb; text-shadow:0 1px 6px rgb(0 0 0 / 55%); opacity:.9; }
@media (max-width:640px){ #fc-hero .fc-hero-spine{ left:8px; width:44px } }
@media (forced-colors:active){
  #fc-hero .fc-hero-spine{ background:Canvas; color:CanvasText; border:1px solid CanvasText; box-shadow:none }
}
@supports not (color: color-mix(in srgb, black, white)){
  #fc-hero .fc-hero-spine{ background:rgb(15 17 23 / 92%) }
}

/* Guards & prefs */
@media (max-width:640px){ #fc-hero .fc-hero-overlay{ padding-inline:1rem } }
@media (prefers-reduced-motion:reduce){
  #fc-hero .fc-hero-card, #fc-hero .fc-hero-card__img{ transform:none !important }
  #fc-hero .hm-fill{ transition:none }
  #donor-ticker .dt-track{ animation:none !important }
}
@media (prefers-contrast:more){
  #fc-hero .fc-hero-card__frame{ -webkit-backdrop-filter:none; backdrop-filter:none; background:#000 !important }
  #fc-hero .fc-hero-cta{ box-shadow:none }
  #fc-hero .chip{ background:#0f141b; border-color:#2b3544 }
}
@media (forced-colors:active){
  #fc-hero .fc-hero-card__frame{ border:1px solid CanvasText; box-shadow:none }
  #fc-hero .fc-hero-badges .badge{ background:Canvas; color:CanvasText; border:1px solid CanvasText }
  #fc-hero .chip, #donor-ticker .dt-item{ background:Canvas; color:CanvasText; border:1px solid CanvasText }
}
@media print{
  #fc-hero .fc-hero-card{ box-shadow:none }
  #fc-hero .fc-hero-card__glare, #fc-hero .fc-hero-card__noise, #donor-ticker{ display:none !important }
  #fc-hero .fc-hero-cta{ background:#000; color:#fff; box-shadow:none }
}

/* Fallback guards */
@supports not (color: color-mix(in srgb, black, white)){
  #fc-hero .hm-fill{ background:linear-gradient(90deg,#e5e7eb, var(--accent)) }
  #fc-hero .fc-hero-cta:focus-visible, #fc-hero .chip:focus-visible{ outline-color:var(--accent) }
}
@supports not ((-webkit-backdrop-filter:blur(1px)) or (backdrop-filter:blur(1px))){
  #fc-hero .fc-hero-card__frame{ background:#0b0f15; border-color:#1f2937 }
  #fc-hero .legacy-chip, #fc-hero .chip{ background:#0f141b; border-color:#1f2937 }
}

/* Neutralize stray global .holo rules inside hero */
#fc-hero .fc-hero-type,
#fc-hero .fc-hero-type.holo3d{
  -webkit-text-fill-color:transparent !important;
  color:transparent !important;
  -webkit-background-clip:text !important;
  background-clip:text !important;
  mix-blend-mode:normal !important;
}
</style>

<script nonce="{{ NONCE }}" type="module">
/* FC Hero — polished runtime
   - CSP-safe, no eval
   - Guarded for pages without #fc-hero
   - Cleans up observers/intervals on pagehide
   - rAF/throttled UI work; passive listeners where safe
   - A11Y-friendly (focus mgmt, timer updates)
*/
(() => {
  'use strict';

  const root = document.getElementById('fc-hero');
  if (!root) return; // nothing to do on pages without hero

  // ── tiny helpers
  const $  = (s, r = root) => r?.querySelector?.(s);
  const $$ = (s, r = root) => Array.from(r?.querySelectorAll?.(s) || []);
  const on = (el, type, fn, opts) => el?.addEventListener?.(type, fn, opts);
  const off = (el, type, fn, opts) => el?.removeEventListener?.(type, fn, opts);
  const prefersReducedMotion = matchMedia('(prefers-reduced-motion: reduce)').matches;
  const visibility = () => document.visibilityState === 'visible';

  // unified teardown
  const ctl = new AbortController();
  const { signal } = ctl;
  on(window, 'pagehide', () => ctl.abort(), { once: true });

  // ── LCP seen analytics hook (once)
  try {
    const lcpTarget = $('[data-lcp-target="1"]', document);
    if (lcpTarget && 'PerformanceObserver' in window) {
      const po = new PerformanceObserver((list) => {
        for (const _ of list.getEntries()) {
          (window.dataLayer = window.dataLayer || []).push({ event: 'hero_lcp_seen' });
          break;
        }
        po.disconnect();
      });
      po.observe({ type: 'largest-contentful-paint', buffered: true });
      on(window, 'pagehide', () => po.disconnect(), { once: true });
    }
  } catch {}

  // ── CTA modal bridge (event delegation)
  on(document, 'click', (e) => {
    const a = e.target?.closest?.('[data-open-donate-modal]');
    if (!a) return;
    e.preventDefault();
    try { (window.openDonationModal || window.FC?.openDonationModal)?.({ source: 'hero' }); } catch {}
  }, { passive: false, signal });

  // ── Autofocus CTA when visible (once)
  const autoFocus = () => {
    const cta = $('.fc-hero-cta'); if (!cta || !('IntersectionObserver' in window)) return;
    const obs = new IntersectionObserver((entries) => {
      if (!entries[0].isIntersecting) return;
      cta.setAttribute('tabindex', '0');
      setTimeout(() => { try { cta.focus({ preventScroll: true }); } catch {} }, 250);
      obs.disconnect();
    }, { rootMargin: '0px 0px -60% 0px', threshold: 0.4 });
    obs.observe(cta);
    on(window, 'pagehide', () => obs.disconnect(), { once: true });
  };

  // ── CTA label swap for tiny screens (matchMedia, no resize spam)
  const tuneCtaLabel = () => {
    const cta = $('.fc-hero-cta'); if (!cta) return;
    const full = cta.getAttribute('data-label-full') || cta.textContent.trim();
    const compact = cta.getAttribute('data-label-compact') || full;
    const mq = matchMedia('(max-width: 359px)');
    const apply = () => { const span = cta.querySelector('.cta-text'); if (span) span.textContent = mq.matches ? compact : full; };
    apply();
    mq.addEventListener?.('change', apply, { signal });
  };

  // ── Money fmt (locale/currency from root dataset)
  const moneyFmt = (val, opts = {}) => {
    const currency = root.dataset.currency || 'USD';
    const locale   = root.dataset.locale   || navigator.language || 'en-US';
    try {
      return new Intl.NumberFormat(locale, {
        style: 'currency', currency,
        maximumFractionDigits: 0,
        notation: (opts.notation || 'standard')
      }).format(val);
    } catch { return String(val); }
  };

  // ── Milestones & counters
  const initMilestones = () => {
    const wrap = $('.hero-meter'); const list = $('#hero-milestones'); const fill = $('#hero-fill');
    if (!wrap || !list || !fill) return;
    const nowPct = Number.parseFloat(fill.style.width) || 0;
    const marks = (wrap.getAttribute('data-milestones') || '25,50,75,100')
      .split(',').map(n => parseInt(n, 10)).filter(n => !Number.isNaN(n));
    list.innerHTML = '';
    for (const m of marks) {
      const li = document.createElement('li');
      li.className = 'ms'; li.dataset.ms = String(m); li.textContent = `${m}%`;
      if (nowPct >= m) li.classList.add('hit');
      list.appendChild(li);
    }
  };

  const initCounters = () => {
    const raisedEl = $('#hero-raised'); const pctEl = $('#hero-pct'); const goalEl = $('#hero-goal'); const sr = $('#hero-sr');
    if (!raisedEl || !pctEl) return;
    const finalMoney = Number.parseFloat(raisedEl.getAttribute('data-count') || '0');
    const finalPct   = Number.parseFloat(pctEl.getAttribute('data-count') || '0');

    if (prefersReducedMotion) {
      raisedEl.textContent = moneyFmt(finalMoney);
      pctEl.textContent = `${finalPct}%`;
      if (sr && goalEl) try { sr.textContent = `Raised ${moneyFmt(finalMoney)} of goal ${goalEl.textContent}.`; } catch {}
      return;
    }

    const dur = 900, easeOut = p => 1 - Math.pow(1 - p, 3);
    const animate = (el, start, end, fmt) => {
      const t0 = performance.now();
      const step = (t) => {
        const p = Math.min(1, (t - t0) / dur);
        const v = Math.round(start + (end - start) * easeOut(p));
        el.textContent = fmt(v);
        if (p < 1) requestAnimationFrame(step);
      };
      requestAnimationFrame(step);
    };
    animate(raisedEl, Math.floor(finalMoney * .2), finalMoney, v => moneyFmt(v));
    animate(pctEl,   Math.floor(finalPct   * .2), finalPct,   v => `${v}%`);
    if (sr && goalEl) try { sr.textContent = `Raised ${moneyFmt(finalMoney)} of goal ${goalEl.textContent}.`; } catch {}
  };

  // ── Live meter updater (also exported)
  const updateHeroMeter = ({ raised, goal }) => {
    const fill = $('#hero-fill'); const rEl = $('#hero-raised'); const gEl = $('#hero-goal'); const pEl = $('#hero-pct'); const sr = $('#hero-sr');
    if (!fill || !rEl || !gEl || !pEl) return;
    const R = Math.max(0, Number(raised ?? (rEl.dataset.raw || 0)));
    const G = Math.max(0, Number(goal   ?? (gEl.dataset.raw || 0)));
    const pct = G > 0 ? Math.max(0, Math.min(100, Math.round((R / G) * 100))) : 0;
    rEl.dataset.raw = String(R); gEl.dataset.raw = String(G);

    const small = innerWidth < 380; const notation = small ? 'compact' : 'standard';
    rEl.textContent = moneyFmt(R, { notation });
    gEl.textContent = moneyFmt(G, { notation });
    pEl.textContent = `${pct}%`;
    fill.style.width = pct + '%';
    if (sr) sr.textContent = `Raised ${moneyFmt(R)} of goal ${moneyFmt(G)}.`;

    // milestone confetti
    $$('#hero-milestones .ms').forEach(li => {
      const m = parseInt(li.dataset.ms || '0', 10);
      if (pct >= m && !li.classList.contains('hit')) { li.classList.add('hit'); confettiBurst(m); }
    });
  };
  window.FC = window.FC || {};
  window.FC.updateHeroMeter = updateHeroMeter;

  on(window, 'fc:meter:update',  (e) => updateHeroMeter(e.detail || {}), { passive: true, signal });
  on(window, 'fc:funds:update',  (e) => updateHeroMeter(e.detail || {}), { passive: true, signal });

  // ── Countdown (timer role text)
  const initCountdown = () => {
    const el = $('#hero-countdown'); if (!el) return;
    const deadlineISO = $('[data-urgency-deadline]', root)?.getAttribute('data-urgency-deadline');
    if (!deadlineISO) { el.style.display = 'none'; return; }
    const deadline = new Date(deadlineISO); if (isNaN(+deadline)) { el.style.display = 'none'; return; }
    const fmt2 = n => String(n).padStart(2, '0');
    const update = () => {
      const diff = deadline - new Date();
      if (diff <= 0) { el.textContent = '⏳ 00d : 00h : 00m'; return; }
      const d = Math.floor(diff / 86400000);
      const h = Math.floor((diff % 86400000) / 3600000);
      const m = Math.floor((diff % 3600000) / 60000);
      const txt = `⏳ ${fmt2(d)}d : ${fmt2(h)}h : ${fmt2(m)}m`;
      if (el.textContent !== txt) el.textContent = txt;
    };
    update();
    const id = setInterval(() => visibility() && update(), 30000);
    on(window, 'pagehide', () => clearInterval(id), { once: true });
  };

  // ── Share button
  const initShare = () => {
    const btn = $('#hero-share'); if (!btn) return;
    on(btn, 'click', async () => {
      try {
        const payload = JSON.parse(btn.getAttribute('data-share') || '{}');
        if (window.FC?.handleShare) { await window.FC.handleShare('hero', payload); return; }
        if (navigator.share) { await navigator.share(payload); return; }
        await navigator.clipboard.writeText(payload.url || location.href);
        const t = btn.textContent; btn.textContent = 'Link copied!'; setTimeout(() => { btn.textContent = t; }, 900);
      } catch {}
    }, { passive: true, signal });
  };

  // ── Donor ticker (optional + SSE)
  const initDonorTicker = () => {
    const wrap = $('#donor-ticker'); const track = $('#donor-ticker .dt-track'); if (!wrap || !track) return;
    const render = (donors = []) => {
      track.innerHTML = '';
      if (!donors.length) { wrap.style.display = 'none'; return; }
      wrap.style.display = 'block';
      donors.slice(0, 20).forEach(d => {
        const item = document.createElement('span'); item.className = 'dt-item';
        const name = document.createElement('strong'); name.textContent = d.name || 'Anonymous';
        const amt  = document.createElement('i');     amt.textContent  = d.amount ? ` — ${moneyFmt(Math.round(d.amount))}` : '';
        item.append(name, amt); track.appendChild(item);
      });
      wrap.dataset.run = '1';
    };
    if (Array.isArray(window.fcRecentDonations)) render(window.fcRecentDonations);

    try {
      if ('EventSource' in window) {
        const es = new EventSource('/sse/donations');
        es.addEventListener('donation', (e) => {
          try {
            const data = JSON.parse(e.data);
            const list = Array.isArray(window.fcRecentDonations) ? window.fcRecentDonations : [];
            list.unshift(data);
            window.fcRecentDonations = list.slice(0, 20);
            render(window.fcRecentDonations);
          } catch {}
        });
        on(window, 'pagehide', () => { try { es.close(); } catch {} }, { once: true });
        signal.addEventListener?.('abort', () => { try { es.close(); } catch {} }, { once: true });
      }
    } catch {}
  };

  // ── Tilt + parallax (pointer & touch)
  const initTilt = () => {
    if (prefersReducedMotion) return;
    const frame = $('.fc-hero-card__frame'); const img = $('#fc-hero-img'); if (!frame || !img) return;
    const lerp = (a, b, t) => a + (b - a) * t; let rx = 0, ry = 0, trX = 0, raf = 0;
    const handle = (clientX, clientY) => {
      const r = frame.getBoundingClientRect();
      const cx = clientX - r.left, cy = clientY - r.top;
      const nx = (cx / r.width) * 2 - 1, ny = (cy / r.height) * 2 - 1;
      rx = lerp(rx, ny * 6, .5); ry = lerp(ry, -nx * 6, .5); trX = lerp(trX, nx * (parseFloat(img.dataset.parallaxY || '8')), .5);
      cancelAnimationFrame(raf);
      raf = requestAnimationFrame(() => {
        frame.style.transform = `rotateX(${rx}deg) rotateY(${ry}deg)`;
        img.style.transform   = `translateX(${trX}px)`;
      });
      root.style.setProperty('--mx', (nx * 50 + 50).toFixed(2) + '%');
      root.style.setProperty('--my', (ny * 50 + 40).toFixed(2) + '%');
    };
    const onMove = (e) => {
      const t = e.touches?.[0];
      handle(t?.clientX ?? e.clientX ?? 0, t?.clientY ?? e.clientY ?? 0);
    };
    const reset = () => { frame.style.transform = ''; img.style.transform = ''; };
    on(frame, 'mousemove',  onMove, { passive: true,  signal });
    on(frame, 'mouseleave', reset,  { passive: true,  signal });
    on(frame, 'touchmove',  onMove, { passive: true,  signal });
    on(frame, 'touchend',   reset,  { passive: true,  signal });
  };

  // ── Hologram 3D tilt for headline
  const initHologram = () => {
    if (prefersReducedMotion) return;
    const holo = root.querySelector('.holo3d'); const frame = root.querySelector('.fc-hero-card__frame');
    if (!holo || !frame) return;
    let raf = 0;
    const onMove = (e) => {
      const r = frame.getBoundingClientRect();
      const t = e.touches?.[0];
      const cx = (t?.clientX ?? e.clientX ?? (r.left + r.width / 2)) - r.left;
      const cy = (t?.clientY ?? e.clientY ?? (r.top + r.height / 2)) - r.top;
      const nx = Math.max(0, Math.min(1, cx / r.width));
      const ny = Math.max(0, Math.min(1, cy / r.height));
      const tilt = parseFloat(getComputedStyle(holo).getPropertyValue('--holo-tilt')) || 6.5;
      const tx = (ny - .5) * tilt; const ty = -(nx - .5) * tilt;
      cancelAnimationFrame(raf);
      raf = requestAnimationFrame(() => { holo.style.transform = `translateZ(var(--holo-depth)) rotateX(${tx}deg) rotateY(${ty}deg)`; });
    };
    const reset = () => { holo.style.transform = `translateZ(var(--holo-depth))`; };
    on(frame, 'mousemove',  onMove, { passive: true, signal });
    on(frame, 'touchmove',  onMove, { passive: true, signal });
    on(frame, 'mouseleave', reset,  { passive: true, signal });
    on(frame, 'touchend',   reset,  { passive: true, signal });
  };

  // ── Luminance-aware tint with red detection
  const luminanceTint = async () => {
    try {
      const imgEl  = $('#fc-hero-img');
      const tintEl = $('.fc-hero-card__tint');
      if (!imgEl || !tintEl) return;

      const src = imgEl.currentSrc || imgEl.src;
      const probe = new Image(); probe.crossOrigin = 'anonymous'; probe.decoding = 'async'; probe.src = src;
      await (probe.decode?.() || Promise.resolve()).catch(() => {});

      const c = document.createElement('canvas');
      const ctx = c.getContext('2d', { willReadFrequently: true }); if (!ctx) return;
      c.width = 64; c.height = 64;
      try { ctx.drawImage(probe, 0, 0, c.width, c.height); } catch { return; }

      const pick = (x0, y0, w, h) => {
        const d = ctx.getImageData(x0, y0, w, h).data; let Lum = 0, N = 0, Rbias = 0;
        for (let i = 0; i < d.length; i += 4) {
          const r = d[i] / 255, g = d[i + 1] / 255, b = d[i + 2] / 255;
          Lum += 0.2126 * r + 0.7152 * g + 0.0722 * b; N++;
          Rbias += Math.max(0, r - Math.max(g, b));
        }
        return { L: Lum / Math.max(1, N), R: Rbias / Math.max(1, N) };
      };
      const B  = pick(0, Math.floor(c.height * 0.55), c.width, Math.floor(c.height * 0.45));
      const Cn = pick(Math.floor(c.width * 0.2), Math.floor(c.height * 0.2), Math.floor(c.width * 0.6), Math.floor(c.height * 0.6));
      const L = Math.max(B.L, Cn.L); const Rscore = Math.max(B.R, Cn.R);

      let tint = Math.max(0, Math.min(0.45, (L - 0.42) * 1.1));
      const redDominant = Rscore > 0.12; if (redDominant) tint = Math.max(tint, 0.35);

      tintEl.style.setProperty('--tint', String(tint));
      root.setAttribute('data-holo-boost', redDominant ? '1' : '0');

      const holo = root.querySelector('.holo3d');
      if (holo) {
        const plate  = Math.min(0.85, 0.55 + tint * 0.9);
        const stroke = Math.min(1.4, 0.6  + tint * 1.2);
        holo.style.setProperty('--holo-plate',  plate.toFixed(2));
        holo.style.setProperty('--holo-stroke', stroke.toFixed(2));
      }
    } catch {}
  };

  // ── Image error fallback
  try { on($('#fc-hero-img'), 'error', () => $('#fc-hero-img')?.classList.add('is-broken'), { passive: true, signal }); } catch {}

  // ── Title belt placement (ResizeObserver + fonts)
  const placeTitleBelt = () => {
    const belt = $('.fc-hero-card__belt'); const frame = $('.fc-hero-card__frame'); const h1 = $('#hero-heading');
    if (!belt || !frame || !h1) return;
    const fr = frame.getBoundingClientRect(); const hr = h1.getBoundingClientRect();
    if (fr.width <= 0 || fr.height <= 0 || hr.height <= 0) return;
    const pad = Math.max(16, Math.min(28, fr.width * 0.02));
    const beltH = Math.max(56, Math.min(96, hr.height * 1.25));
    belt.style.setProperty('--belt-h', `${beltH}px`);
    belt.style.left = `${pad}px`; belt.style.right = `${pad}px`;
    belt.style.top  = `${Math.max(0, (hr.top - fr.top) + hr.height / 2 - beltH / 2)}px`;
  };
  try {
    const ro = new ResizeObserver(placeTitleBelt);
    const h1 = $('#hero-heading'); if (h1) ro.observe(h1);
    on(window, 'pagehide', () => ro.disconnect(), { once: true });
    document.fonts?.ready?.then(placeTitleBelt).catch(() => {});
  } catch {}

  // ── Milestone confetti
  const confettiBurst = (ms) => {
    if (prefersReducedMotion) return;
    const outlet = $('#confetti'); if (!outlet) return;
    const pieces = 16;
    for (let i = 0; i < pieces; i++) {
      const p = document.createElement('i'); p.className = 'confetti-piece';
      p.style.left = `${10 + Math.random() * 80}%`; p.style.top = `${8 + Math.random() * 6}%`;
      const hue = Math.floor(45 + Math.random() * 60);
      p.style.background = `hsl(${hue} 90% 60%)`;
      p.style.animationDelay = `${Math.random() * 0.2}s`;
      outlet.appendChild(p);
      setTimeout(() => p.remove(), 1000);
    }
    try { window.dispatchEvent(new CustomEvent('fc:milestone', { detail: { milestone: ms } })); } catch {}
  };

  // ── Currency reformatting on resize (debounced)
  const applyFormats = () => {
    const small = innerWidth < 380; const notation = small ? 'compact' : 'standard';
    const rEl = $('#hero-raised'); const gEl = $('#hero-goal');
    const R = Number.parseFloat(rEl?.getAttribute('data-raw') || '0');
    const G = Number.parseFloat(gEl?.getAttribute('data-raw') || '0');
    if (rEl) rEl.textContent = moneyFmt(R, { notation });
    if (gEl) gEl.textContent = moneyFmt(G, { notation });
  };
  let resizeRAF = 0;
  on(window, 'resize', () => {
    if (resizeRAF) cancelAnimationFrame(resizeRAF);
    resizeRAF = requestAnimationFrame(() => { applyFormats(); placeTitleBelt(); });
  }, { passive: true, signal });

  // ── Match chip
  const initMatchChip = () => {
    const chip = $('#match-chip'); if (!chip) return;
    const s = new Date(chip.getAttribute('data-match-start') || '');
    const e = new Date(chip.getAttribute('data-match-end') || '');
    if (isNaN(+s) || isNaN(+e)) return;
    const update = () => {
      const now = new Date(); const active = now >= s && now <= e;
      chip.classList.toggle('hidden', !active);
      if (active) chip.textContent = `🎯 ${chip.getAttribute('data-match-label') || 'Match ×2 Active'}`;
    };
    update();
    const id = setInterval(() => visibility() && update(), 60000);
    on(window, 'pagehide', () => clearInterval(id), { once: true });
  };

  // ── <24h urgency ping (title + CTA label nudge)
  const initUrgencyPing = () => {
    const cta = $('.fc-hero-cta'); const baseTitle = document.title;
    const deadline = new Date(cta?.getAttribute('data-urgency-deadline') || '');
    if (!cta || isNaN(+deadline)) return;
    const tick = () => {
      const hrs = (deadline - new Date()) / 36e5; const urgent = hrs > 0 && hrs <= 24;
      if (urgent && visibility()) {
        document.title = `⏳ ${Math.max(0, Math.ceil(hrs))}h · ${baseTitle}`;
        const span = cta.querySelector('.cta-text');
        if (span && (span.textContent || '').toLowerCase().includes('donate')) span.textContent = 'Donate Now';
      } else {
        document.title = baseTitle;
      }
    };
    tick();
    const id = setInterval(tick, 300000);
    on(window, 'pagehide', () => clearInterval(id), { once: true });
  };

  // ── Donate hotkey (D) — ignore when typing or with modifiers
  on(window, 'keydown', (e) => {
    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return;
    const tag = e.target?.tagName || '';
    if ((e.key === 'd' || e.key === 'D') && !/input|textarea|select/i.test(tag)) {
      $('.fc-hero-cta')?.click();
    }
  }, { passive: true, signal });

  // ── Init (idle when available)
  const init = () => {
    autoFocus();
    tuneCtaLabel();
    initMilestones();
    initCounters();
    initCountdown();
    initShare();
    initDonorTicker();
    initTilt();
    initHologram();

    luminanceTint();
    placeTitleBelt();
    applyFormats();
    initMatchChip();
    initUrgencyPing();
  };

  if ('requestIdleCallback' in window) {
    requestIdleCallback(init, { timeout: 1200 });
  } else {
    setTimeout(init, 0);
  }
})();
</script>

